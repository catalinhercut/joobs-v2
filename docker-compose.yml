services:
  api:
    build: ./api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB:-n8n}
      DB_USER: ${POSTGRES_USER:-n8n}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-changeme123}
      CRAWL4AI_API_URL: http://crawl4ai:4000
    ports:
      - "${API_PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`${API_HOST}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.services.api.loadbalancer.server.port=3000"

  web:
    build: ./web
    restart: unless-stopped
    ports:
      - "${WEB_PORT:-5173}:5173"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`${WEB_HOST}`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls.certresolver=letsencrypt"
      - "traefik.http.services.web.loadbalancer.server.port=5173"

  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-n8n}
      POSTGRES_USER: ${POSTGRES_USER:-n8n}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme123}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U n8n -d n8n"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 60s

  crawl4ai:
    build: ./crawl4ai
    restart: unless-stopped
    environment:
      NODE_ENV: production
      CHROME_BIN: /usr/bin/chromium-browser
      CHROME_PATH: /usr/bin/chromium-browser
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB:-n8n}
      DB_USER: ${POSTGRES_USER:-n8n}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-changeme123}
      DATABASE_URL: postgresql://${POSTGRES_USER:-n8n}:${POSTGRES_PASSWORD:-changeme123}@postgres:5432/${POSTGRES_DB:-n8n}
    ports:
      - "${CRAWL4AI_PORT:-4000}:4000"
    depends_on:
      postgres:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.crawl4ai.rule=Host(`${CRAWL4AI_HOST}`) && PathPrefix(`/crawl`)"
      - "traefik.http.routers.crawl4ai.entrypoints=websecure"
      - "traefik.http.routers.crawl4ai.tls.certresolver=letsencrypt"
      - "traefik.http.services.crawl4ai.loadbalancer.server.port=4000"

  n8n:
    image: n8nio/n8n:latest
    restart: unless-stopped
    environment:
      # Database
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: ${POSTGRES_DB:-n8n}
      DB_POSTGRESDB_USER: ${POSTGRES_USER:-n8n}
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_PASSWORD:-changeme123}

      # n8n Configuration
      N8N_HOST: ${N8N_HOST}
      N8N_PORT: 5678
      N8N_PROTOCOL: ${N8N_PROTOCOL:-https}
      WEBHOOK_URL: ${WEBHOOK_URL}

      # Security
      N8N_BASIC_AUTH_ACTIVE: ${N8N_BASIC_AUTH_ACTIVE:-true}
      N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER:-admin}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_BASIC_AUTH_PASSWORD:-admin123}

      # Execution settings
      EXECUTIONS_DATA_SAVE_ON_ERROR: all
      EXECUTIONS_DATA_SAVE_ON_SUCCESS: all
      EXECUTIONS_DATA_SAVE_MANUAL_EXECUTIONS: true

      # Other settings
      GENERIC_TIMEZONE: ${TIMEZONE:-UTC}
      N8N_LOG_LEVEL: ${N8N_LOG_LEVEL:-info}
      N8N_DIAGNOSTICS_ENABLED: false
      N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: false
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/workflows:/home/node/.n8n/workflows:ro
    ports:
      - "${N8N_PORT:-5678}:5678"
    depends_on:
      postgres:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`${N8N_HOST}`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.routers.n8n.tls.certresolver=letsencrypt"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"

volumes:
  postgres_data:
    driver: local
  n8n_data:
    driver: local
